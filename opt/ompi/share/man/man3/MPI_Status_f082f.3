.\" Automatically generated by Pandoc 2.11.3
.\"
.TH "MPI_Status_f082f" "3" "" "2021-02-04" "Open MPI"
.hy
.SH NAME
.PP
MPI_Status_f082f, MPI_Status_c2f08 - Translates a Fortran 2008 status
into a Fortran INTEGER-style status, or vice versa.
.SH SYNTAX
.SS C Syntax
.IP
.nf
\f[C]
#include <mpi.h>

int MPI_Status_f082f(const MPI_F08_status *f08_status, MPI_Fint *f_status)
int MPI_Status_f2f08(const MPI_Fint *f_status, MPI_F08_status *f08_status)
\f[R]
.fi
.SS Fortran mpi Module Syntax
.IP
.nf
\f[C]
USE MPI

MPI_STATUS_F082F(F08_STATUS, F_STATUS, IERROR)
    TYPE(MPI_Status) :: F08_STATUS
    INTEGER :: STATUS(MPI_STATUS_SIZE), IERROR

MPI_STATUS_F2F08(F_STATUS, F08_STATUS, IERROR)
    INTEGER :: F_STATUS(MPI_STATUS_SIZE), IERROR
    TYPE(MPI_Status) :: F08_STATUS
\f[R]
.fi
.SS Fortran mpi_f08 Module Syntax
.IP
.nf
\f[C]
USE mpi_f08

MPI_Status_f082f(f08_status, f_status, ierror)
    TYPE(MPI_Status), INTENT(IN) :: f08_status
    INTEGER, INTENT(OUT) :: f_status(MPI_STATUS_SIZE)
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror

MPI_Status_f2f08(f_status, f08_status, ierror)
    INTEGER, INTENT(IN) :: f_status(MPI_STATUS_SIZE)
    TYPE(MPI_Status), INTENT(OUT) :: f08_status
    INTEGER, OPTIONAL, INTENT(OUT) :: ierror
\f[R]
.fi
.SH PARAMETERS
.IP \[bu] 2
\f[C]f08_status\f[R]: \f[C]mpi_f08\f[R]-style MPI status object
.IP \[bu] 2
\f[C]f_status\f[R]: \f[C]mpi\f[R]-style \f[C]INTEGER\f[R] MPI status
object
.SH DESCRIPTION
.PP
These two procedures are provided to convert from a Fortran 2008 status
(which is a derived datatype made of integers) to a Fortran status
(which is an array of integers), and vice versa.
The conversion occurs on all the information in \f[C]status\f[R],
including that which is hidden.
That is, no status information is lost in the conversion.
.PP
When using \f[C]MPI_Status_f082f()\f[R], if \f[C]f08_status\f[R] is a
valid Fortran status, but not the Fortran value of
\f[C]MPI_F08_STATUS_IGNORE\f[R] (in C), \f[C]MPI_STATUS_IGNORE\f[R] (in
Fortran) or \f[C]MPI_F08_STATUSES_IGNORE\f[R] (in C) or
\f[C]MPI_STATUSES_IGNORE\f[R] (in Fortran), then
\f[C]MPI_Status_f082f()\f[R] returns in \f[C]f_status\f[R] a valid array
with the same content.
If \f[C]f08_status\f[R] is the C value of
\f[C]MPI_F08_STATUS_IGNORE\f[R] or \f[C]MPI_F08_STATUSES_IGNORE\f[R] or
the Fortran value of \f[C]MPI_STATUS_IGNORE\f[R] or
\f[C]MPI_STATUSES_IGNORE\f[R], or if \f[C]f08_status\f[R] is not a valid
Fortran status, then the call is erroneous.
.PP
When using \f[C]MPI_Status_f2f08()\f[R], the opposite conversion is
applied.
If \f[C]f_status\f[R] is \f[C]MPI_STATUS_IGNORE\f[R] or
\f[C]MPI_STATUSES_IGNORE\f[R], or if \f[C]f_status\f[R] is not a valid
Fortran status, then the call is erroneous.
.PP
The input status has the same source, tag and error code values as the
output status, and returns the same answers when queried for count,
elements, and cancellation.
The conversion function may be called with an input status argument that
has an undefined error field, in which case the value of the error field
in the output status argument is undefined.
.SH NOTES
.PP
The Fortran subroutines for these MPI routines are only available in the
\f[C]mpi\f[R] and \f[C]mpi_f08\f[R] modules (including the type
specification for
\f[C]TYPE(MPI_Status); they are (intentionally) not available in\f[R]mpif.h\[ga].
.SH SEE ALSO
.PP
\f[C]MPI_Status_c2f\f[R](3), \f[C]MPI_Status_f2c\f[R](3),
\f[C]MPI_Status_f082c\f[R](3), \f[C]MPI_Status_c2f08\f[R](3)
